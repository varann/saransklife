package ru.saransklife.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import ru.saransklife.dao.SectionItem;
import ru.saransklife.dao.Page;
import ru.saransklife.dao.PlaceCategory;
import ru.saransklife.dao.PlaceEntity;
import ru.saransklife.dao.Seance;
import ru.saransklife.dao.EventCategory;
import ru.saransklife.dao.Event;
import ru.saransklife.dao.ReferenceCategory;
import ru.saransklife.dao.Reference;
import ru.saransklife.dao.CacheInfo;

import ru.saransklife.dao.SectionItemDao;
import ru.saransklife.dao.PageDao;
import ru.saransklife.dao.PlaceCategoryDao;
import ru.saransklife.dao.PlaceEntityDao;
import ru.saransklife.dao.SeanceDao;
import ru.saransklife.dao.EventCategoryDao;
import ru.saransklife.dao.EventDao;
import ru.saransklife.dao.ReferenceCategoryDao;
import ru.saransklife.dao.ReferenceDao;
import ru.saransklife.dao.CacheInfoDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig sectionItemDaoConfig;
    private final DaoConfig pageDaoConfig;
    private final DaoConfig placeCategoryDaoConfig;
    private final DaoConfig placeEntityDaoConfig;
    private final DaoConfig seanceDaoConfig;
    private final DaoConfig eventCategoryDaoConfig;
    private final DaoConfig eventDaoConfig;
    private final DaoConfig referenceCategoryDaoConfig;
    private final DaoConfig referenceDaoConfig;
    private final DaoConfig cacheInfoDaoConfig;

    private final SectionItemDao sectionItemDao;
    private final PageDao pageDao;
    private final PlaceCategoryDao placeCategoryDao;
    private final PlaceEntityDao placeEntityDao;
    private final SeanceDao seanceDao;
    private final EventCategoryDao eventCategoryDao;
    private final EventDao eventDao;
    private final ReferenceCategoryDao referenceCategoryDao;
    private final ReferenceDao referenceDao;
    private final CacheInfoDao cacheInfoDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        sectionItemDaoConfig = daoConfigMap.get(SectionItemDao.class).clone();
        sectionItemDaoConfig.initIdentityScope(type);

        pageDaoConfig = daoConfigMap.get(PageDao.class).clone();
        pageDaoConfig.initIdentityScope(type);

        placeCategoryDaoConfig = daoConfigMap.get(PlaceCategoryDao.class).clone();
        placeCategoryDaoConfig.initIdentityScope(type);

        placeEntityDaoConfig = daoConfigMap.get(PlaceEntityDao.class).clone();
        placeEntityDaoConfig.initIdentityScope(type);

        seanceDaoConfig = daoConfigMap.get(SeanceDao.class).clone();
        seanceDaoConfig.initIdentityScope(type);

        eventCategoryDaoConfig = daoConfigMap.get(EventCategoryDao.class).clone();
        eventCategoryDaoConfig.initIdentityScope(type);

        eventDaoConfig = daoConfigMap.get(EventDao.class).clone();
        eventDaoConfig.initIdentityScope(type);

        referenceCategoryDaoConfig = daoConfigMap.get(ReferenceCategoryDao.class).clone();
        referenceCategoryDaoConfig.initIdentityScope(type);

        referenceDaoConfig = daoConfigMap.get(ReferenceDao.class).clone();
        referenceDaoConfig.initIdentityScope(type);

        cacheInfoDaoConfig = daoConfigMap.get(CacheInfoDao.class).clone();
        cacheInfoDaoConfig.initIdentityScope(type);

        sectionItemDao = new SectionItemDao(sectionItemDaoConfig, this);
        pageDao = new PageDao(pageDaoConfig, this);
        placeCategoryDao = new PlaceCategoryDao(placeCategoryDaoConfig, this);
        placeEntityDao = new PlaceEntityDao(placeEntityDaoConfig, this);
        seanceDao = new SeanceDao(seanceDaoConfig, this);
        eventCategoryDao = new EventCategoryDao(eventCategoryDaoConfig, this);
        eventDao = new EventDao(eventDaoConfig, this);
        referenceCategoryDao = new ReferenceCategoryDao(referenceCategoryDaoConfig, this);
        referenceDao = new ReferenceDao(referenceDaoConfig, this);
        cacheInfoDao = new CacheInfoDao(cacheInfoDaoConfig, this);

        registerDao(SectionItem.class, sectionItemDao);
        registerDao(Page.class, pageDao);
        registerDao(PlaceCategory.class, placeCategoryDao);
        registerDao(PlaceEntity.class, placeEntityDao);
        registerDao(Seance.class, seanceDao);
        registerDao(EventCategory.class, eventCategoryDao);
        registerDao(Event.class, eventDao);
        registerDao(ReferenceCategory.class, referenceCategoryDao);
        registerDao(Reference.class, referenceDao);
        registerDao(CacheInfo.class, cacheInfoDao);
    }
    
    public void clear() {
        sectionItemDaoConfig.getIdentityScope().clear();
        pageDaoConfig.getIdentityScope().clear();
        placeCategoryDaoConfig.getIdentityScope().clear();
        placeEntityDaoConfig.getIdentityScope().clear();
        seanceDaoConfig.getIdentityScope().clear();
        eventCategoryDaoConfig.getIdentityScope().clear();
        eventDaoConfig.getIdentityScope().clear();
        referenceCategoryDaoConfig.getIdentityScope().clear();
        referenceDaoConfig.getIdentityScope().clear();
        cacheInfoDaoConfig.getIdentityScope().clear();
    }

    public SectionItemDao getSectionItemDao() {
        return sectionItemDao;
    }

    public PageDao getPageDao() {
        return pageDao;
    }

    public PlaceCategoryDao getPlaceCategoryDao() {
        return placeCategoryDao;
    }

    public PlaceEntityDao getPlaceEntityDao() {
        return placeEntityDao;
    }

    public SeanceDao getSeanceDao() {
        return seanceDao;
    }

    public EventCategoryDao getEventCategoryDao() {
        return eventCategoryDao;
    }

    public EventDao getEventDao() {
        return eventDao;
    }

    public ReferenceCategoryDao getReferenceCategoryDao() {
        return referenceCategoryDao;
    }

    public ReferenceDao getReferenceDao() {
        return referenceDao;
    }

    public CacheInfoDao getCacheInfoDao() {
        return cacheInfoDao;
    }

}
