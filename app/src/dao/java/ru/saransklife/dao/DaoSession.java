package ru.saransklife.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 *
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

	private final DaoConfig sectionItemDaoConfig;
	private final DaoConfig pageDaoConfig;
	private final DaoConfig placeCategoryDaoConfig;
	private final DaoConfig placeEntityDaoConfig;
	private final DaoConfig eventCategoryDaoConfig;
	private final DaoConfig eventDaoConfig;
	private final DaoConfig referenceCategoryDaoConfig;
	private final DaoConfig referenceDaoConfig;

	private final SectionItemDao sectionItemDao;
	private final PageDao pageDao;
	private final PlaceCategoryDao placeCategoryDao;
	private final PlaceEntityDao placeEntityDao;
	private final EventCategoryDao eventCategoryDao;
	private final EventDao eventDao;
	private final ReferenceCategoryDao referenceCategoryDao;
	private final ReferenceDao referenceDao;

	public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
			daoConfigMap) {
		super(db);

		sectionItemDaoConfig = daoConfigMap.get(SectionItemDao.class).clone();
		sectionItemDaoConfig.initIdentityScope(type);

		pageDaoConfig = daoConfigMap.get(PageDao.class).clone();
		pageDaoConfig.initIdentityScope(type);

		placeCategoryDaoConfig = daoConfigMap.get(PlaceCategoryDao.class).clone();
		placeCategoryDaoConfig.initIdentityScope(type);

		placeEntityDaoConfig = daoConfigMap.get(PlaceEntityDao.class).clone();
		placeEntityDaoConfig.initIdentityScope(type);

		eventCategoryDaoConfig = daoConfigMap.get(EventCategoryDao.class).clone();
		eventCategoryDaoConfig.initIdentityScope(type);

		eventDaoConfig = daoConfigMap.get(EventDao.class).clone();
		eventDaoConfig.initIdentityScope(type);

		referenceCategoryDaoConfig = daoConfigMap.get(ReferenceCategoryDao.class).clone();
		referenceCategoryDaoConfig.initIdentityScope(type);

		referenceDaoConfig = daoConfigMap.get(ReferenceDao.class).clone();
		referenceDaoConfig.initIdentityScope(type);

		sectionItemDao = new SectionItemDao(sectionItemDaoConfig, this);
		pageDao = new PageDao(pageDaoConfig, this);
		placeCategoryDao = new PlaceCategoryDao(placeCategoryDaoConfig, this);
		placeEntityDao = new PlaceEntityDao(placeEntityDaoConfig, this);
		eventCategoryDao = new EventCategoryDao(eventCategoryDaoConfig, this);
		eventDao = new EventDao(eventDaoConfig, this);
		referenceCategoryDao = new ReferenceCategoryDao(referenceCategoryDaoConfig, this);
		referenceDao = new ReferenceDao(referenceDaoConfig, this);

		registerDao(SectionItem.class, sectionItemDao);
		registerDao(Page.class, pageDao);
		registerDao(PlaceCategory.class, placeCategoryDao);
		registerDao(PlaceEntity.class, placeEntityDao);
		registerDao(EventCategory.class, eventCategoryDao);
		registerDao(Event.class, eventDao);
		registerDao(ReferenceCategory.class, referenceCategoryDao);
		registerDao(Reference.class, referenceDao);
	}

	public void clear() {
		sectionItemDaoConfig.getIdentityScope().clear();
		pageDaoConfig.getIdentityScope().clear();
		placeCategoryDaoConfig.getIdentityScope().clear();
		placeEntityDaoConfig.getIdentityScope().clear();
		eventCategoryDaoConfig.getIdentityScope().clear();
		eventDaoConfig.getIdentityScope().clear();
		referenceCategoryDaoConfig.getIdentityScope().clear();
		referenceDaoConfig.getIdentityScope().clear();
	}

	public SectionItemDao getSectionItemDao() {
		return sectionItemDao;
	}

	public PageDao getPageDao() {
		return pageDao;
	}

	public PlaceCategoryDao getPlaceCategoryDao() {
		return placeCategoryDao;
	}

	public PlaceEntityDao getPlaceEntityDao() {
		return placeEntityDao;
	}

	public EventCategoryDao getEventCategoryDao() {
		return eventCategoryDao;
	}

	public EventDao getEventDao() {
		return eventDao;
	}

	public ReferenceCategoryDao getReferenceCategoryDao() {
		return referenceCategoryDao;
	}

	public ReferenceDao getReferenceDao() {
		return referenceDao;
	}

}
